@model LojaRoupas.Models.Cliente

<style>
    body {
        margin: 0;
        display: flex;
        align-content: center;
        justify-items: center;
        overflow: hidden;
    }

    #container {
        padding: 100px;
    }

    .btn-largo {
        width: 15%;
    }

    #container input {
        margin-bottom: 20px;
    }

    #texto {
        font-size: 20px;
        color: #A07B63;
    }

    hr {
        margin-top: 5px;
    }

    #container label {
        margin-right: 10px;
        font-weight: bold;
        display: inline-block;
        min-width: 100px;
    }

    #container input::placeholder {
        text-align: start;
    }
</style>

<div>
    <partial name="_LayoutSuperior" />
</div>

<div id="container">
    <span id="texto">DADOS</span>
    <hr />

    <div class="row">
        <div class="col-12">
            <form asp-controller="AreaCliente" asp-action="Salvar" method="post">
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="inputNome">Nome</label>
                        <input type="text" class="form-control" id="inputNome" placeholder="Nome" value="@Model.Nome">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="inputCPF">CPF</label>
                        <input type="text" class="form-control" id="inputCPF" placeholder="CPF" value="@Model.CPF">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="inputEmail">Email</label>
                        <input type="email" class="form-control" id="inputEmail" placeholder="Email" value="@Model.Email">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="inputCELULAR">Celular</label>
                        <input type="tel" class="form-control" id="inputCELULAR" placeholder="Celular" value="@Model.Celular">
                    </div>
                </div>

                <span id="texto">ENDEREÇO</span>
                <hr />

                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="inputCEP">CEP</label>
                        <input type="text" class="form-control" id="inputCEP" placeholder="CEP" value="@Model.CEP">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="inputAddress">Logradouro</label>
                        <input type="text" class="form-control" id="inputAddress" placeholder="Logradouro" value="@Model.Logradouro">
                    </div>

                    <div class="form-group col-md-3">
                        <label for="inputNumber">Número</label>
                        <input type="number" class="form-control" id="inputNumber" placeholder="Número" value="@Model.Numero">
                    </div>

                    <div class="form-group col-md-4">
                        <label for="inputBairro">Bairro</label>
                        <input type="text" class="form-control" id="inputBairro" placeholder="Bairro" value="@Model.Bairro">
                    </div>

                    <div class="form-group col-md-4">
                        <label for="inputEstado">Estado</label>
                        <select id="inputEstado" class="form-control" value="@Model.Estado">
                            <option selected>Estado</option>
                        </select>
                    </div>

                    <div class="form-group col-md-4">
                        <label for="inputCity">Cidade</label>
                        <input type="text" class="form-control" id="inputCity" placeholder="Cidade" value="@Model.Cidade">
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-12 text-end">
                        <button type="submit" class="btn btn-success btn-largo"><strong>SALVAR</strong></button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Preenchendo o select de estados
        const estados = [
            'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
            'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN',
            'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'
        ];

        const selectEstado = document.getElementById("inputEstado");

        estados.forEach(function(estado) {
            const option = document.createElement("option");
            option.value = estado;
            option.textContent = estado;
            selectEstado.appendChild(option);
        });

        // Preenchendo os campos de endereço com base no CEP
        const cepInput = document.getElementById("inputCEP");
        const cityInput = document.getElementById("inputCity");
        const stateSelect = document.getElementById("inputEstado");
        const neighborhoodInput = document.getElementById("inputBairro");
        const addressInput = document.getElementById("inputAddress");

        function clearFields() {
            cityInput.value = "";
            stateSelect.value = "Estado";
            neighborhoodInput.value = "";
            addressInput.value = "";
        }

        function fillFields(data) {
            if (data && data.erro) {
                clearFields();
                alert("CEP não encontrado!");
                return;
            }
            cityInput.value = data.localidade;
            stateSelect.value = data.uf;
            neighborhoodInput.value = data.bairro;
            addressInput.value = data.logradouro;
        }

        cepInput.addEventListener("blur", function() {
            const cep = cepInput.value.replace(/\D/g, '');

            if (cep.length === 8) {
                fetch(`https://viacep.com.br/ws/${cep}/json/`)
                    .then(response => response.json())
                    .then(data => fillFields(data))
                    .catch(() => {
                        clearFields();
                        alert("Erro ao buscar CEP.");
                    });
            } else {
                clearFields();
            }
        });

        // Formatando CPF e CEP
        const cpfInput = document.getElementById("inputCPF");

        cepInput.addEventListener('input', function() {
            let value = this.value.replace(/\D/g, '');
            if (value.length > 5) {
                value = value.slice(0, 5) + '-' + value.slice(5, 8);
            }

            this.value = value;
        });

        cpfInput.addEventListener('input', function() {
            let value = this.value.replace(/\D/g, '');
            if (value.length > 9) {
                value = value.slice(0, 3) + '.' + value.slice(3, 6) + '.' + value.slice(6, 9) + '-' + value.slice(9, 11);
            } else if (value.length > 6) {
                value = value.slice(0, 3) + '.' + value.slice(3, 6) + '.' + value.slice(6, 9);
            } else if (value.length > 3) {
                value = value.slice(0, 3) + '.' + value.slice(3, 6);
            }

            this.value = value;
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const celularInput = document.getElementById("inputCELULAR");

        celularInput.addEventListener("input", function () {
            let value = this.value.replace(/\D/g, ''); 
            if (value.length > 10) {
                value = `(${value.slice(0, 2)}) ${value.slice(2, 7)}-${value.slice(7, 11)}`;
            } else if (value.length > 6) {
                value = `(${value.slice(0, 2)}) ${value.slice(2, 6)}-${value.slice(6, 10)}`;
            } else if (value.length > 2) {
                value = `(${value.slice(0, 2)}) ${value.slice(2, 6)}`;
            } else if (value.length > 0) {
                value = `(${value}`;
            }
            this.value = value;
        });
    });
</script>
